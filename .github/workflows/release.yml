name: Build and Release AAR

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install NDK
        run: |
          echo "y" | sdkmanager "ndk;26.1.10909125"
          echo "y" | sdkmanager "cmake;3.22.1"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build AAR
        run: ./gradlew :mediainfo-lib:assembleRelease

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Rename AAR
        run: |
          cp mediainfo-lib/build/outputs/aar/mediainfo-lib-release.aar mediainfo-lib-${{ steps.get_version.outputs.VERSION }}.aar

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: mediainfo-lib-${{ steps.get_version.outputs.VERSION }}.aar
          body: |
            MediaInfo Android Library ${{ steps.get_version.outputs.VERSION }}
            
            ## Installation
            
            Download the AAR file and add it to your project:
            
            ```gradle
            dependencies {
                implementation files('libs/mediainfo-lib-${{ steps.get_version.outputs.VERSION }}.aar')
            }
            ```
            
            ## Usage
            
            ```kotlin
            import net.mediaarea.mediainfo.lib.MediaInfoUtil
            
            val pfd = contentResolver.openFileDescriptor(uri, "r")
            val fd = pfd?.detachFd() ?: return
            val xmlOutput = MediaInfoUtil.getMediaInfoXml(fd, "video.mp4")
            pfd?.close()
            ```
          draft: false
          prerelease: false

